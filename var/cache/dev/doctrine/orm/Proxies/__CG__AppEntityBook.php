<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Book extends \App\Entity\Book implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Book' . "\0" . 'imageRepository', '' . "\0" . 'App\\Entity\\Book' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Book' . "\0" . 'isbn', '' . "\0" . 'App\\Entity\\Book' . "\0" . 'title', '' . "\0" . 'App\\Entity\\Book' . "\0" . 'subtitle', '' . "\0" . 'App\\Entity\\Book' . "\0" . 'author', '' . "\0" . 'App\\Entity\\Book' . "\0" . 'published', '' . "\0" . 'App\\Entity\\Book' . "\0" . 'publisher', '' . "\0" . 'App\\Entity\\Book' . "\0" . 'pages', '' . "\0" . 'App\\Entity\\Book' . "\0" . 'description', '' . "\0" . 'App\\Entity\\Book' . "\0" . 'website', '' . "\0" . 'App\\Entity\\Book' . "\0" . 'category', '' . "\0" . 'App\\Entity\\Book' . "\0" . 'images'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Book' . "\0" . 'imageRepository', '' . "\0" . 'App\\Entity\\Book' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Book' . "\0" . 'isbn', '' . "\0" . 'App\\Entity\\Book' . "\0" . 'title', '' . "\0" . 'App\\Entity\\Book' . "\0" . 'subtitle', '' . "\0" . 'App\\Entity\\Book' . "\0" . 'author', '' . "\0" . 'App\\Entity\\Book' . "\0" . 'published', '' . "\0" . 'App\\Entity\\Book' . "\0" . 'publisher', '' . "\0" . 'App\\Entity\\Book' . "\0" . 'pages', '' . "\0" . 'App\\Entity\\Book' . "\0" . 'description', '' . "\0" . 'App\\Entity\\Book' . "\0" . 'website', '' . "\0" . 'App\\Entity\\Book' . "\0" . 'category', '' . "\0" . 'App\\Entity\\Book' . "\0" . 'images'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Book $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getIsbn(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsbn', []);

        return parent::getIsbn();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsbn(string $isbn): \App\Entity\Book
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsbn', [$isbn]);

        return parent::setIsbn($isbn);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', []);

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle(string $title): \App\Entity\Book
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', [$title]);

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubtitle(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubtitle', []);

        return parent::getSubtitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubtitle(string $subtitle): \App\Entity\Book
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubtitle', [$subtitle]);

        return parent::setSubtitle($subtitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getAuthor(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAuthor', []);

        return parent::getAuthor();
    }

    /**
     * {@inheritDoc}
     */
    public function setAuthor(string $author): \App\Entity\Book
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAuthor', [$author]);

        return parent::setAuthor($author);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublished(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublished', []);

        return parent::getPublished();
    }

    /**
     * {@inheritDoc}
     */
    public function setPublished(\DateTimeInterface $published): \App\Entity\Book
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPublished', [$published]);

        return parent::setPublished($published);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublishert(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublishert', []);

        return parent::getPublishert();
    }

    /**
     * {@inheritDoc}
     */
    public function setPublisher(string $publisher): \App\Entity\Book
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPublisher', [$publisher]);

        return parent::setPublisher($publisher);
    }

    /**
     * {@inheritDoc}
     */
    public function getPages(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPages', []);

        return parent::getPages();
    }

    /**
     * {@inheritDoc}
     */
    public function setPages(int $pages): \App\Entity\Book
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPages', [$pages]);

        return parent::setPages($pages);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription(string $description): \App\Entity\Book
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getWebsite(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWebsite', []);

        return parent::getWebsite();
    }

    /**
     * {@inheritDoc}
     */
    public function setWebsite(?string $website): \App\Entity\Book
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWebsite', [$website]);

        return parent::setWebsite($website);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategory(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategory', []);

        return parent::getCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategory(string $category): \App\Entity\Book
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategory', [$category]);

        return parent::setCategory($category);
    }

    /**
     * {@inheritDoc}
     */
    public function getImages(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImages', []);

        return parent::getImages();
    }

    /**
     * {@inheritDoc}
     */
    public function addImage(\App\Entity\Image $image): \App\Entity\Book
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addImage', [$image]);

        return parent::addImage($image);
    }

    /**
     * {@inheritDoc}
     */
    public function setImages($imageAray): \App\Entity\Book
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImages', [$imageAray]);

        return parent::setImages($imageAray);
    }

    /**
     * {@inheritDoc}
     */
    public function removeImage(\App\Entity\Image $image): \App\Entity\Book
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeImage', [$image]);

        return parent::removeImage($image);
    }

    /**
     * {@inheritDoc}
     */
    public function toArray()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toArray', []);

        return parent::toArray();
    }

}
